uniform sampler2D ColorMapSampler;uniform sampler2D UserMapSampler;uniform vec2 lightPositionOnScreen;		//float decay=0.96815;//float exposure=0.2;//float density=0.26;//float weight=0.58767;void main(){ float decay=0.96815;	float exposure=0.2;	float density=0.26;	float weight=0.58767;	 int NUM_SAMPLES = 100;		 vec2 tc = gl_TexCoord[0].xy;
 	vec2 deltaTexCoord = (tc - lightPositionOnScreen.xy);   	deltaTexCoord *= 1.0 / float(NUM_SAMPLES) * density;   	 	float illuminationDecay = 1.0;	 vec4 color =texture2D(UserMapSampler, tc.xy)*0.4;	 	for(int i=0; i < NUM_SAMPLES ; i++)  {		    tc -= deltaTexCoord;		    vec4 sample = texture2D(UserMapSampler, tc)*0.4;		    sample *= illuminationDecay * weight;  		    color += sample;		    illuminationDecay *= decay;   	} 	//gl_FragColor *= exposure; 	//gl_FragColor += texture2D(ColorMapSampler, textCoo.xy); vec4 realColor = texture2D(ColorMapSampler, gl_TexCoord[0].xy); 	gl_FragColor = ((vec4((vec3(color.r,color.g,color.b) * exposure),1))+(realColor*(1.5-0.4)));	//gl_FragColor = color;	//return ((float4((float3(color.r,color.g,color.b) * exposure),1))+(realColor*(1.5-0.4)));	//return realColor + float3(color.r, color.g, color.b) * exposure));	//return color + realColor;	//return float4( float3(color.r, color.g, color.b) * exposure, 1) + realColor;	//return float4( color * exposure, 1);	//return realColor + float4(color.r, color.g, color.b, 1);	//return ((float4((float3(color.r,color.g,color.b) * exposure),1))+(realColor*(1.5-0.4)));
 //gl_FragColor = ((vec4((vec3(color.r,color.g,color.b) * exposure),1))+(realColor*(1.5-0.4)));}