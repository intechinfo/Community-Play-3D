<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>irrBullet: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.2 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>IRigidBody Member List</h1>This is the complete list of members for <a class="el" href="class_i_rigid_body.html">IRigidBody</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a6c621b4d9e949e8ae9c82dfe9eb8b2aa">activate</a>(bool forceActivation=false)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_property_holder.html#ac80b43b5d0c3076ab5a241453f54fd5d">addProperty</a>(const irrBulletProperty property)</td><td><a class="el" href="class_i_property_holder.html">IPropertyHolder</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a9339136592c19cb1c7d5b3667f259eaa">applyCalculatedCcdValues</a>()</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a949a341e06c500b96a0a5221633f9aff">applyCentralForce</a>(const irr::core::vector3df &amp;force, ERBTransformSpace transformSpace=ERBTS_WORLD)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ac11f5990d8fc6046c18e5c183d754b19">applyCentralImpulse</a>(const irr::core::vector3df &amp;impulse, ERBTransformSpace transformSpace=ERBTS_WORLD)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a4e346d652eb9217c4cf263ef6a5f20b8">applyDamping</a>(irr::f32 timeStep)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a38b6a14233840a967162e7c09150dc03">applyForce</a>(const irr::core::vector3df &amp;force, const irr::core::vector3df &amp;relPos, ERBTransformSpace transformSpace=ERBTS_WORLD)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a98cdc70debc939aae6ccce85f33978b8">applyGravity</a>()</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ac30d28e431bd266972a57ac4f2985c8d">applyImpulse</a>(const irr::core::vector3df &amp;impulse, const irr::core::vector3df &amp;relPos, ERBTransformSpace transformSpace=ERBTS_WORLD)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a0ec0685ca40927c82c5e8eb1270333ae">applyTorque</a>(const irr::core::vector3df &amp;torque, ERBTransformSpace transformSpace=ERBTS_WORLD)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#acd151f0b6dcc8a4067b2e9d0ed442aa1">applyTorqueImpulse</a>(const irr::core::vector3df &amp;torque, ERBTransformSpace transformSpace=ERBTS_WORLD)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a49d7d15866d331f1cee239f763f62438">checkCollideWithOverride</a>(ICollisionObject *co)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a597d1cc50f3a00df7e4bb69d30caa5da">clearForces</a>()</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a7fc7afcf3bd4d456ff712f2bcea52b4f">computeAngularImpulseDenominator</a>(const irr::core::vector3df &amp;axis) const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#afeb7af54d02cc385b3741830ed7d9838">computeImpulseDenominator</a>(const irr::core::vector3df &amp;pos, const irr::core::vector3df &amp;normal) const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#ae77283e183677a5e6c9581f2f124fe2c">forceActivationState</a>(EActivationState newState)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ac0ef351d0e8bfb9e97e5b0ef64507dfb">getAabb</a>(irr::core::vector3df &amp;aabbMin, irr::core::vector3df &amp;aabbMax) const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#af7dad55b6edba37ad43ad8d5e626e516">getActivationState</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a070e939ab1c0d37f1b9b6cad696da20b">getAngularDamping</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a782aa19b6666ddf7ec81b4bd4f3ee51c">getAngularFactor</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#af1b5aef6c29e91e924f8f3f1cc4155b0">getAngularSleepingThreshold</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#af958fb855ac87d479638a6a64ee78c47">getAngularVelocity</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#addbf38e99cb87722907044b557b83a43">getAnisotropicFriction</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#abbdb1df28e7ece9e433655c4d2acab83">getCollisionFlags</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a74f4260f9ebeb61b3857ffb2c444bbf8">getCollisionShape</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#afbd7cbf5b88a8358155cd80df65c487e">getCompanionId</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a3f1b8e74ec4dfbe0b7ab5201771788e5">getContactProcessingThreshold</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a98052ecc5a1ce1d03cf648872ef338b3">getFriction</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#af0a372539088d04bb6cdc951afc0cced">getGravity</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#aa46ef9d8861fc0f8c2af2d9868e7e63a">getHitFraction</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a411282bdf1a8aa1ea761c2188d15346c">getInterpolationAngularVelocity</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#adc43de7d7aae2d85697549514c35fb4b">getInterpolationLinearVelocity</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#afaf4dab9c58a148c2c52687af974b2f5">getInvInertiaDiagLocal</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#aa766fdcad6492fc30bc582ed766a0865">getInvMass</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a999814b7b60fa27bcc0d56e282d1bad4">getIslandTag</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a17c9877bcea31a4723ca02831665b25a">getLinearDamping</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ae421a838ccccb1bdc6c3550d8a128e11">getLinearFactor</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ac4aff60cd393c1358ed2f54d6f62337f">getLinearSleepingThreshold</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ab83e293d5ba5a4b4b8119899117b26d7">getLinearVelocity</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ae2219b20beadb2babbb190a711a6c522">getNumConstraintRefs</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_property_holder.html#a036f37270052271c60f55c4be9d9a84c">getNumProperties</a>() const </td><td><a class="el" href="class_i_property_holder.html">IPropertyHolder</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#ac45f369b63799221bfb5a7e824e4410c">getObjectType</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a715facacf50933fc95b30267628afc9a">getPointer</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_property_holder.html#a11c762618fa4b72f77da2b9e2db67989">getProperty</a>(irr::u32 index) const </td><td><a class="el" href="class_i_property_holder.html">IPropertyHolder</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_property_holder.html#a769a7850f1249fb948403f55a50ea469">getProperty</a>(irr::core::stringw name) const </td><td><a class="el" href="class_i_property_holder.html">IPropertyHolder</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#aa8adb77a72e8c94a1f40e907e47c59d4">getRestitution</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a7a6f0272f0ed396d91fa758eb3bf3f6c">getTotalForce</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a5a10f309cd17b869aa6f57275b8d9f5d">getTotalTorque</a>()</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#ab85f18b67c6fd90bd48ac8d7c1428a32">getUniqueID</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#af00445868973aff938a2291325ac0c50">getVelocityInLocalPoint</a>(const irr::core::vector3df &amp;relPos) const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ad226bf80f0d241771ba20a2e0806ca29">getWorldTransform</a>()</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a236e76c73a772f73bd83c8671b884678">hasAnisotropicFriction</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a9e0a91ab9d1a193e05e0661dc2940c67">hasContactResponse</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a0d9f911cedf9ca021764cb5976f11cf0">ICollisionObject</a>()</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a873390fa8c152a77b8a03b41a7c826ad">integrateVelocities</a>(irr::f32 step)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a62a0dc12a34d779bd862b4b68794aebe">internalApplyImpulse</a>(const irr::core::vector3df &amp;linearComponent, const irr::core::vector3df &amp;angularComponent, irr::f32 impulseMagnitude, ERBTransformSpace linTransformSpace=ERBTS_WORLD, ERBTransformSpace angTransformSpace=ERBTS_WORLD)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_property_holder.html#a65a81d578d85a42c048ad8c66af4608e">IPropertyHolder</a>()</td><td><a class="el" href="class_i_property_holder.html">IPropertyHolder</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ab250d7cadc485e52a5148d59cbaa2cdb">IRigidBody</a>(ICollisionShape *collShape)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a1ce93719471a5cabb0ab7414f31190de">IRigidBody</a>(SRigidBodyConstructionInfo info)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a5c158644119a8dbc358ecc6a01a45653">isActive</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a38f6560144d9929412f496c63cc344d3">isInWorld</a>() const </td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a3c54134928e06972974077306124b199">isKinematicObject</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a733594c8050fe90dfd95870aa05e3a12">isStaticObject</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a8d931f4cb59d728f95e89179f53a7b9b">isStaticOrKinematicObject</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#ad7a7b0e2847b4760b1dc5b4471ce54f6">mergesSimulationIslands</a>() const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a7e389d5974cb967f3443c29b8d7fa906">object</a></td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#ae1c6876bb4d2ae10a3d1263999efc7cf">objectType</a></td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#ae1252e82c9b1093a3b9411d98c1cf63d">operator!=</a>(const ICollisionObject &amp;other) const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a2f5eb67d8e3f26df9de754d55e7239ea">operator==</a>(const ICollisionObject &amp;other) const </td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_property_holder.html#afb89ac1f048f21cb5a2b8bdc3e676dc8">properties</a></td><td><a class="el" href="class_i_property_holder.html">IPropertyHolder</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a62cbfc8dd28911e46b584270f96f2676">saveKinematicState</a>(irr::f32 step)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a215f663f5cac44b0c1c35481f641cc68">setActivationState</a>(EActivationState newState)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a2c9fb03d3dce6bc4b91067e3d938ca65">setAngularFactor</a>(const irr::core::vector3df &amp;angFac)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a0847288415e4c59f649a8fcd161b52bd">setAngularFactor</a>(irr::f32 angFac)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a986902c31ec618ca59198cb1b71acace">setAngularVelocity</a>(const irr::core::vector3df &amp;angVel, ERBTransformSpace transformSpace=ERBTS_WORLD)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a9a33c9047eae4afbd3422839ec368578">setAnisotropicFriction</a>(const irr::core::vector3df &amp;friction)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a952188a7461d07db4f30ddafe050d0a9">setCcdValues</a>(const irr::f32 motionThreshold, const irr::f32 radius)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a2dc50a7a9c8729a5b7110a6fa8043f77">setCollisionFlags</a>(ECollisionFlag flags)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a4c7b13550d46795545e405bed93728d1">setCollisionShape</a>(ICollisionShape *const shape)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#abcb6456d4a4ca07afd5efa5e2372cbf3">setCompanionId</a>(irr::u32 id)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a5923dd3767ee02913335a011610d3244">setContactProcessingThreshold</a>(irr::f32 cpt)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a4b962fdb8213fb6af0bab4d2c541025e">setDamping</a>(const irr::f32 lin_damping, const irr::f32 ang_damping)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a4d84a220af79e5fc02b987dd17f073ef">setFriction</a>(irr::f32 friction)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ae2cd998900a43145ef817f8f05da0b63">setGravity</a>(const irr::core::vector3df &amp;grav)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a43bf02110aef62a2ede50a8b3339a202">setHitFraction</a>(irr::f32 hitFraction)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a935ed870a6e33877a20ce25dee0a7762">setInterpolationAngularVelocity</a>(const irr::core::vector3df &amp;angvel)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#af32ad82fbe4468ec599b15459c3d8843">setInterpolationLinearVelocity</a>(const irr::core::vector3df &amp;linvel)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ade2ed58bf706c0d7173d8bb52fbbd06b">setInvInertiaDiagLocal</a>(const irr::core::vector3df &amp;diagInvInertia)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a4ccc532c2fc4fc572c3e9f6924a130f0">setIslandTag</a>(irr::u32 tag)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#add7825ca3e5cf3b6f90a9bb80cf36e3e">setLinearFactor</a>(const irr::core::vector3df &amp;linearFactor)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ab76d7954f8eed12a954f3295f95f92ad">setLinearVelocity</a>(const irr::core::vector3df &amp;linVel, ERBTransformSpace transformSpace=ERBTS_WORLD)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ac6fe4cadc25cda3601eee8005e874cd1">setMassProps</a>(irr::f32 mass, const irr::core::vector3df &amp;inertia)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a9870214816a83305e7bbc897452000b0">setRestitution</a>(irr::f32 rest)</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a69adf00b389fce77921f118ecd4a4056">setSleepingThresholds</a>(irr::f32 linear, irr::f32 angular)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ac8534556d590a7f0f144e30c2172c318">setWorldTransform</a>(irr::core::matrix4 irrmat)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a4c07d72ff1e72c94ca8e6d046c0d38f2">shape</a></td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a16f980f1d449555fa12bcf5f79beea28">translate</a>(const irr::core::vector3df &amp;v)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a478bc6c2f3e2ed071f573e4caa0cf4da">uniqueID</a></td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a7bc19577eb5aae98ec4ef4a5d8d24ba9">updateDeactivation</a>(irr::f32 timeStep)</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a5276f7e08c473b1abaedff7d8b7cd381">updateInertiaTensor</a>()</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a876a63ecfe8e5a48d3bc217fe8548447">wantsSleeping</a>()</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#ad9244be2968c2807466172849fe05bea">worldTransform</a></td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_collision_object.html#a86a4da1c6a6300b40ea940120ff45827">~ICollisionObject</a>()</td><td><a class="el" href="class_i_collision_object.html">ICollisionObject</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="class_i_rigid_body.html#a95f6c9beab0071c4f174ea1aa86722e3">~IRigidBody</a>()</td><td><a class="el" href="class_i_rigid_body.html">IRigidBody</a></td><td><code> [virtual]</code></td></tr>
</table></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
</body>
</html>
