<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>irrBullet: ICollisionObject Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.2 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>ICollisionObject Class Reference</h1><!-- doxytag: class="ICollisionObject" --><!-- doxytag: inherits="IPropertyHolder" -->
<p>The base class of all world objects.  
<a href="#_details">More...</a></p>

<p><code>#include &lt;<a class="el" href="collisionobject_8h_source.html">collisionobject.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ICollisionObject:</div>
<div class="dynsection">
 <div class="center">
  <img src="class_i_collision_object.png" usemap="#ICollisionObject_map" alt=""/>
  <map id="ICollisionObject_map" name="ICollisionObject_map">
<area href="class_i_property_holder.html" alt="IPropertyHolder" shape="rect" coords="0,0,102,24"/>
<area href="class_i_rigid_body.html" alt="IRigidBody" shape="rect" coords="0,112,102,136"/>
</map>
 </div>
</div>

<p><a href="class_i_collision_object-members.html">List of all members.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a0d9f911cedf9ca021764cb5976f11cf0">ICollisionObject</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a86a4da1c6a6300b40ea940120ff45827">~ICollisionObject</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a4c7b13550d46795545e405bed93728d1">setCollisionShape</a> (<a class="el" href="class_i_collision_shape.html">ICollisionShape</a> *const <a class="el" href="class_i_collision_object.html#a4c07d72ff1e72c94ca8e6d046c0d38f2">shape</a>)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the collision shape for the object to use.  <a href="#a4c7b13550d46795545e405bed93728d1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a952188a7461d07db4f30ddafe050d0a9">setCcdValues</a> (const irr::f32 motionThreshold, const irr::f32 radius)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a9339136592c19cb1c7d5b3667f259eaa">applyCalculatedCcdValues</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Special function of irrBullet to automatically get the correct values for CCD.  <a href="#a9339136592c19cb1c7d5b3667f259eaa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a9a33c9047eae4afbd3422839ec368578">setAnisotropicFriction</a> (const irr::core::vector3df &amp;friction)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a5923dd3767ee02913335a011610d3244">setContactProcessingThreshold</a> (irr::f32 cpt)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a215f663f5cac44b0c1c35481f641cc68">setActivationState</a> (<a class="el" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">EActivationState</a> newState)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#ae77283e183677a5e6c9581f2f124fe2c">forceActivationState</a> (<a class="el" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">EActivationState</a> newState)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a6c621b4d9e949e8ae9c82dfe9eb8b2aa">activate</a> (bool forceActivation=false)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If sleeping, this will "wake" the object up.  <a href="#a6c621b4d9e949e8ae9c82dfe9eb8b2aa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a9870214816a83305e7bbc897452000b0">setRestitution</a> (irr::f32 rest)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets how "bouncy" the object is. Higher values will make it more bouncy.  <a href="#a9870214816a83305e7bbc897452000b0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a4d84a220af79e5fc02b987dd17f073ef">setFriction</a> (irr::f32 friction)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#af32ad82fbe4468ec599b15459c3d8843">setInterpolationLinearVelocity</a> (const irr::core::vector3df &amp;linvel)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a935ed870a6e33877a20ce25dee0a7762">setInterpolationAngularVelocity</a> (const irr::core::vector3df &amp;angvel)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a4ccc532c2fc4fc572c3e9f6924a130f0">setIslandTag</a> (irr::u32 tag)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#abcb6456d4a4ca07afd5efa5e2372cbf3">setCompanionId</a> (irr::u32 id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a43bf02110aef62a2ede50a8b3339a202">setHitFraction</a> (irr::f32 hitFraction)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a2dc50a7a9c8729a5b7110a6fa8043f77">setCollisionFlags</a> (<a class="el" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89">ECollisionFlag</a> flags)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a2f5eb67d8e3f26df9de754d55e7239ea">operator==</a> (const <a class="el" href="class_i_collision_object.html">ICollisionObject</a> &amp;other) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#ae1252e82c9b1093a3b9411d98c1cf63d">operator!=</a> (const <a class="el" href="class_i_collision_object.html">ICollisionObject</a> &amp;other) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">btCollisionObject *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a9d0c09d1297e047f3dc48cb7cc89ad82">getPointer</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_i_collision_shape.html">ICollisionShape</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a74f4260f9ebeb61b3857ffb2c444bbf8">getCollisionShape</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#ad7a7b0e2847b4760b1dc5b4471ce54f6">mergesSimulationIslands</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::core::vector3df&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#addbf38e99cb87722907044b557b83a43">getAnisotropicFriction</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a236e76c73a772f73bd83c8671b884678">hasAnisotropicFriction</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::f32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a3f1b8e74ec4dfbe0b7ab5201771788e5">getContactProcessingThreshold</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a733594c8050fe90dfd95870aa05e3a12">isStaticObject</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a3c54134928e06972974077306124b199">isKinematicObject</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a8d931f4cb59d728f95e89179f53a7b9b">isStaticOrKinematicObject</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a9e0a91ab9d1a193e05e0661dc2940c67">hasContactResponse</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">EActivationState</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#af7dad55b6edba37ad43ad8d5e626e516">getActivationState</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a5c158644119a8dbc358ecc6a01a45653">isActive</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::f32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#aa8adb77a72e8c94a1f40e907e47c59d4">getRestitution</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::f32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a98052ecc5a1ce1d03cf648872ef338b3">getFriction</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::core::vector3df&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#adc43de7d7aae2d85697549514c35fb4b">getInterpolationLinearVelocity</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::core::vector3df&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a411282bdf1a8aa1ea761c2188d15346c">getInterpolationAngularVelocity</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::u32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a999814b7b60fa27bcc0d56e282d1bad4">getIslandTag</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::u32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#afbd7cbf5b88a8358155cd80df65c487e">getCompanionId</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::f32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#aa46ef9d8861fc0f8c2af2d9868e7e63a">getHitFraction</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89">ECollisionFlag</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#abbdb1df28e7ece9e433655c4d2acab83">getCollisionFlags</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::u32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#ab85f18b67c6fd90bd48ac8d7c1428a32">getUniqueID</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715">ECollisionObjectType</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#ac45f369b63799221bfb5a7e824e4410c">getObjectType</a> () const </td></tr>
<tr><td colspan="2"><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_i_collision_shape.html">ICollisionShape</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a4c07d72ff1e72c94ca8e6d046c0d38f2">shape</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">btCollisionObject *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a7e389d5974cb967f3443c29b8d7fa906">object</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">irr::u32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#a478bc6c2f3e2ed071f573e4caa0cf4da">uniqueID</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715">ECollisionObjectType</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_i_collision_object.html#ae1c6876bb4d2ae10a3d1263999efc7cf">objectType</a></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>The base class of all world objects. </p>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a0d9f911cedf9ca021764cb5976f11cf0"></a><!-- doxytag: member="ICollisionObject::ICollisionObject" ref="a0d9f911cedf9ca021764cb5976f11cf0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ICollisionObject::ICollisionObject </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a86a4da1c6a6300b40ea940120ff45827"></a><!-- doxytag: member="ICollisionObject::~ICollisionObject" ref="a86a4da1c6a6300b40ea940120ff45827" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ICollisionObject::~ICollisionObject </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a6c621b4d9e949e8ae9c82dfe9eb8b2aa"></a><!-- doxytag: member="ICollisionObject::activate" ref="a6c621b4d9e949e8ae9c82dfe9eb8b2aa" args="(bool forceActivation=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::activate </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>forceActivation</em> = <code>false</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>If sleeping, this will "wake" the object up. </p>

</div>
</div>
<a class="anchor" id="a9339136592c19cb1c7d5b3667f259eaa"></a><!-- doxytag: member="ICollisionObject::applyCalculatedCcdValues" ref="a9339136592c19cb1c7d5b3667f259eaa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::applyCalculatedCcdValues </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Special function of irrBullet to automatically get the correct values for CCD. </p>

</div>
</div>
<a class="anchor" id="ae77283e183677a5e6c9581f2f124fe2c"></a><!-- doxytag: member="ICollisionObject::forceActivationState" ref="ae77283e183677a5e6c9581f2f124fe2c" args="(EActivationState newState)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::forceActivationState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">EActivationState</a>&nbsp;</td>
          <td class="paramname"> <em>newState</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af7dad55b6edba37ad43ad8d5e626e516"></a><!-- doxytag: member="ICollisionObject::getActivationState" ref="af7dad55b6edba37ad43ad8d5e626e516" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">EActivationState</a> ICollisionObject::getActivationState </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="addbf38e99cb87722907044b557b83a43"></a><!-- doxytag: member="ICollisionObject::getAnisotropicFriction" ref="addbf38e99cb87722907044b557b83a43" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector3df ICollisionObject::getAnisotropicFriction </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="abbdb1df28e7ece9e433655c4d2acab83"></a><!-- doxytag: member="ICollisionObject::getCollisionFlags" ref="abbdb1df28e7ece9e433655c4d2acab83" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89">ECollisionFlag</a> ICollisionObject::getCollisionFlags </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a74f4260f9ebeb61b3857ffb2c444bbf8"></a><!-- doxytag: member="ICollisionObject::getCollisionShape" ref="a74f4260f9ebeb61b3857ffb2c444bbf8" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_i_collision_shape.html">ICollisionShape</a> * ICollisionObject::getCollisionShape </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Current collision shape in use by the object. </dd></dl>

</div>
</div>
<a class="anchor" id="afbd7cbf5b88a8358155cd80df65c487e"></a><!-- doxytag: member="ICollisionObject::getCompanionId" ref="afbd7cbf5b88a8358155cd80df65c487e" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">u32 ICollisionObject::getCompanionId </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a3f1b8e74ec4dfbe0b7ab5201771788e5"></a><!-- doxytag: member="ICollisionObject::getContactProcessingThreshold" ref="a3f1b8e74ec4dfbe0b7ab5201771788e5" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">f32 ICollisionObject::getContactProcessingThreshold </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a98052ecc5a1ce1d03cf648872ef338b3"></a><!-- doxytag: member="ICollisionObject::getFriction" ref="a98052ecc5a1ce1d03cf648872ef338b3" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">irr::f32 ICollisionObject::getFriction </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aa46ef9d8861fc0f8c2af2d9868e7e63a"></a><!-- doxytag: member="ICollisionObject::getHitFraction" ref="aa46ef9d8861fc0f8c2af2d9868e7e63a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">f32 ICollisionObject::getHitFraction </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a411282bdf1a8aa1ea761c2188d15346c"></a><!-- doxytag: member="ICollisionObject::getInterpolationAngularVelocity" ref="a411282bdf1a8aa1ea761c2188d15346c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector3df ICollisionObject::getInterpolationAngularVelocity </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="adc43de7d7aae2d85697549514c35fb4b"></a><!-- doxytag: member="ICollisionObject::getInterpolationLinearVelocity" ref="adc43de7d7aae2d85697549514c35fb4b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector3df ICollisionObject::getInterpolationLinearVelocity </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a999814b7b60fa27bcc0d56e282d1bad4"></a><!-- doxytag: member="ICollisionObject::getIslandTag" ref="a999814b7b60fa27bcc0d56e282d1bad4" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">u32 ICollisionObject::getIslandTag </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac45f369b63799221bfb5a7e824e4410c"></a><!-- doxytag: member="ICollisionObject::getObjectType" ref="ac45f369b63799221bfb5a7e824e4410c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715">ECollisionObjectType</a> ICollisionObject::getObjectType </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a9d0c09d1297e047f3dc48cb7cc89ad82"></a><!-- doxytag: member="ICollisionObject::getPointer" ref="a9d0c09d1297e047f3dc48cb7cc89ad82" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">btCollisionObject * ICollisionObject::getPointer </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Underlaying btCollisionObject pointer. </dd></dl>

<p>Reimplemented in <a class="el" href="class_i_rigid_body.html#a715facacf50933fc95b30267628afc9a">IRigidBody</a>.</p>

</div>
</div>
<a class="anchor" id="aa8adb77a72e8c94a1f40e907e47c59d4"></a><!-- doxytag: member="ICollisionObject::getRestitution" ref="aa8adb77a72e8c94a1f40e907e47c59d4" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">irr::f32 ICollisionObject::getRestitution </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>How "bouncy" the object is. </dd></dl>

</div>
</div>
<a class="anchor" id="ab85f18b67c6fd90bd48ac8d7c1428a32"></a><!-- doxytag: member="ICollisionObject::getUniqueID" ref="ab85f18b67c6fd90bd48ac8d7c1428a32" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">irr::u32 ICollisionObject::getUniqueID </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a236e76c73a772f73bd83c8671b884678"></a><!-- doxytag: member="ICollisionObject::hasAnisotropicFriction" ref="a236e76c73a772f73bd83c8671b884678" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ICollisionObject::hasAnisotropicFriction </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a9e0a91ab9d1a193e05e0661dc2940c67"></a><!-- doxytag: member="ICollisionObject::hasContactResponse" ref="a9e0a91ab9d1a193e05e0661dc2940c67" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ICollisionObject::hasContactResponse </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a5c158644119a8dbc358ecc6a01a45653"></a><!-- doxytag: member="ICollisionObject::isActive" ref="a5c158644119a8dbc358ecc6a01a45653" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ICollisionObject::isActive </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a3c54134928e06972974077306124b199"></a><!-- doxytag: member="ICollisionObject::isKinematicObject" ref="a3c54134928e06972974077306124b199" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ICollisionObject::isKinematicObject </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a733594c8050fe90dfd95870aa05e3a12"></a><!-- doxytag: member="ICollisionObject::isStaticObject" ref="a733594c8050fe90dfd95870aa05e3a12" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ICollisionObject::isStaticObject </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a8d931f4cb59d728f95e89179f53a7b9b"></a><!-- doxytag: member="ICollisionObject::isStaticOrKinematicObject" ref="a8d931f4cb59d728f95e89179f53a7b9b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ICollisionObject::isStaticOrKinematicObject </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ad7a7b0e2847b4760b1dc5b4471ce54f6"></a><!-- doxytag: member="ICollisionObject::mergesSimulationIslands" ref="ad7a7b0e2847b4760b1dc5b4471ce54f6" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ICollisionObject::mergesSimulationIslands </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ae1252e82c9b1093a3b9411d98c1cf63d"></a><!-- doxytag: member="ICollisionObject::operator!=" ref="ae1252e82c9b1093a3b9411d98c1cf63d" args="(const ICollisionObject &amp;other) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ICollisionObject::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_i_collision_object.html">ICollisionObject</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>other</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a2f5eb67d8e3f26df9de754d55e7239ea"></a><!-- doxytag: member="ICollisionObject::operator==" ref="a2f5eb67d8e3f26df9de754d55e7239ea" args="(const ICollisionObject &amp;other) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ICollisionObject::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_i_collision_object.html">ICollisionObject</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>other</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a215f663f5cac44b0c1c35481f641cc68"></a><!-- doxytag: member="ICollisionObject::setActivationState" ref="a215f663f5cac44b0c1c35481f641cc68" args="(EActivationState newState)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setActivationState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">EActivationState</a>&nbsp;</td>
          <td class="paramname"> <em>newState</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a9a33c9047eae4afbd3422839ec368578"></a><!-- doxytag: member="ICollisionObject::setAnisotropicFriction" ref="a9a33c9047eae4afbd3422839ec368578" args="(const irr::core::vector3df &amp;friction)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setAnisotropicFriction </td>
          <td>(</td>
          <td class="paramtype">const irr::core::vector3df &amp;&nbsp;</td>
          <td class="paramname"> <em>friction</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a952188a7461d07db4f30ddafe050d0a9"></a><!-- doxytag: member="ICollisionObject::setCcdValues" ref="a952188a7461d07db4f30ddafe050d0a9" args="(const irr::f32 motionThreshold, const irr::f32 radius)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setCcdValues </td>
          <td>(</td>
          <td class="paramtype">const irr::f32&nbsp;</td>
          <td class="paramname"> <em>motionThreshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const irr::f32&nbsp;</td>
          <td class="paramname"> <em>radius</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Sets the Continuous Collision Detection values of the world object. This helps to avoid tunneling (when an object "shoots" through another object when it is not supposed to, due to traveling too far in one step, sometimes actually passing by a collision face before it is stepped again, where it should have collided) at high speeds. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>motionThreshold</em>&nbsp;</td><td>The simulation doesn't do CCD unless the motion (in one step) is more than motionThreshold. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>radius</em>&nbsp;</td><td>Swept sphere radius. (0.0 by default) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2dc50a7a9c8729a5b7110a6fa8043f77"></a><!-- doxytag: member="ICollisionObject::setCollisionFlags" ref="a2dc50a7a9c8729a5b7110a6fa8043f77" args="(ECollisionFlag flags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setCollisionFlags </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89">ECollisionFlag</a>&nbsp;</td>
          <td class="paramname"> <em>flags</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a4c7b13550d46795545e405bed93728d1"></a><!-- doxytag: member="ICollisionObject::setCollisionShape" ref="a4c7b13550d46795545e405bed93728d1" args="(ICollisionShape *const shape)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setCollisionShape </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_i_collision_shape.html">ICollisionShape</a> *const &nbsp;</td>
          <td class="paramname"> <em>shape</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets the collision shape for the object to use. </p>

</div>
</div>
<a class="anchor" id="abcb6456d4a4ca07afd5efa5e2372cbf3"></a><!-- doxytag: member="ICollisionObject::setCompanionId" ref="abcb6456d4a4ca07afd5efa5e2372cbf3" args="(irr::u32 id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setCompanionId </td>
          <td>(</td>
          <td class="paramtype">irr::u32&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a5923dd3767ee02913335a011610d3244"></a><!-- doxytag: member="ICollisionObject::setContactProcessingThreshold" ref="a5923dd3767ee02913335a011610d3244" args="(irr::f32 cpt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setContactProcessingThreshold </td>
          <td>(</td>
          <td class="paramtype">irr::f32&nbsp;</td>
          <td class="paramname"> <em>cpt</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The constraint solver can discard solving contacts if the distance is above this threshold.</p>
<p>0 by default. Note that using contacts with positive distance can improve stability. It increases, however, the chance of colliding with degerate contacts, such as 'interior' triangle edges </p>

</div>
</div>
<a class="anchor" id="a4d84a220af79e5fc02b987dd17f073ef"></a><!-- doxytag: member="ICollisionObject::setFriction" ref="a4d84a220af79e5fc02b987dd17f073ef" args="(irr::f32 friction)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setFriction </td>
          <td>(</td>
          <td class="paramtype">irr::f32&nbsp;</td>
          <td class="paramname"> <em>friction</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Sets the friction of the object. Objects with higher friction values tend to tumble and roll more, and will not slide as far as it would with lower friction values. </p>

</div>
</div>
<a class="anchor" id="a43bf02110aef62a2ede50a8b3339a202"></a><!-- doxytag: member="ICollisionObject::setHitFraction" ref="a43bf02110aef62a2ede50a8b3339a202" args="(irr::f32 hitFraction)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setHitFraction </td>
          <td>(</td>
          <td class="paramtype">irr::f32&nbsp;</td>
          <td class="paramname"> <em>hitFraction</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a935ed870a6e33877a20ce25dee0a7762"></a><!-- doxytag: member="ICollisionObject::setInterpolationAngularVelocity" ref="a935ed870a6e33877a20ce25dee0a7762" args="(const irr::core::vector3df &amp;angvel)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setInterpolationAngularVelocity </td>
          <td>(</td>
          <td class="paramtype">const irr::core::vector3df &amp;&nbsp;</td>
          <td class="paramname"> <em>angvel</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af32ad82fbe4468ec599b15459c3d8843"></a><!-- doxytag: member="ICollisionObject::setInterpolationLinearVelocity" ref="af32ad82fbe4468ec599b15459c3d8843" args="(const irr::core::vector3df &amp;linvel)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setInterpolationLinearVelocity </td>
          <td>(</td>
          <td class="paramtype">const irr::core::vector3df &amp;&nbsp;</td>
          <td class="paramname"> <em>linvel</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a4ccc532c2fc4fc572c3e9f6924a130f0"></a><!-- doxytag: member="ICollisionObject::setIslandTag" ref="a4ccc532c2fc4fc572c3e9f6924a130f0" args="(irr::u32 tag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setIslandTag </td>
          <td>(</td>
          <td class="paramtype">irr::u32&nbsp;</td>
          <td class="paramname"> <em>tag</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a9870214816a83305e7bbc897452000b0"></a><!-- doxytag: member="ICollisionObject::setRestitution" ref="a9870214816a83305e7bbc897452000b0" args="(irr::f32 rest)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ICollisionObject::setRestitution </td>
          <td>(</td>
          <td class="paramtype">irr::f32&nbsp;</td>
          <td class="paramname"> <em>rest</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets how "bouncy" the object is. Higher values will make it more bouncy. </p>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a7e389d5974cb967f3443c29b8d7fa906"></a><!-- doxytag: member="ICollisionObject::object" ref="a7e389d5974cb967f3443c29b8d7fa906" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">btCollisionObject* <a class="el" href="class_i_collision_object.html#a7e389d5974cb967f3443c29b8d7fa906">ICollisionObject::object</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ae1c6876bb4d2ae10a3d1263999efc7cf"></a><!-- doxytag: member="ICollisionObject::objectType" ref="ae1c6876bb4d2ae10a3d1263999efc7cf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715">ECollisionObjectType</a> <a class="el" href="class_i_collision_object.html#ae1c6876bb4d2ae10a3d1263999efc7cf">ICollisionObject::objectType</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a4c07d72ff1e72c94ca8e6d046c0d38f2"></a><!-- doxytag: member="ICollisionObject::shape" ref="a4c07d72ff1e72c94ca8e6d046c0d38f2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_i_collision_shape.html">ICollisionShape</a>* <a class="el" href="class_i_collision_object.html#a4c07d72ff1e72c94ca8e6d046c0d38f2">ICollisionObject::shape</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a478bc6c2f3e2ed071f573e4caa0cf4da"></a><!-- doxytag: member="ICollisionObject::uniqueID" ref="a478bc6c2f3e2ed071f573e4caa0cf4da" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">irr::u32 <a class="el" href="class_i_collision_object.html#a478bc6c2f3e2ed071f573e4caa0cf4da">ICollisionObject::uniqueID</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Program Files (x86)/CodeBlocks/Library/irrBullet/source/<a class="el" href="collisionobject_8h_source.html">collisionobject.h</a></li>
<li>C:/Program Files (x86)/CodeBlocks/Library/irrBullet/source/<a class="el" href="collisionobject_8cpp.html">collisionobject.cpp</a></li>
</ul>
</div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
</body>
</html>
